---
// Datos estáticos simulando base de datos local

const paquetes = [
  {
    nombre: "Corte Estándar",
    precio: "$250 MXN",
    descripcion:
      "Corte clásico con tijeras y máquina, incluye lavado y styling.",
    imagen:
      "https://images.unsplash.com/photo-1503951914875-452162b0f3f1?w=800&auto=format&fit=crop&q=60",
  },
  {
    nombre: "Afeitado Tradicional",
    precio: "$200 MXN",
    descripcion:
      "Afeitado con navaja, toallas calientes y frías, masaje facial y aftershave premium.",
    imagen:
      "https://images.unsplash.com/photo-1585747860715-2ba37e788b70?w=800&auto=format&fit=crop&q=60",
  },
  {
    nombre: "Paquete Gentleman",
    precio: "$400 MXN",
    descripcion:
      "Incluye corte de cabello, arreglo de barba, limpieza facial y masaje relajante de cuello y hombros.",
    imagen:
      "https://images.unsplash.com/photo-1599351431202-1e0f0137899a?w=800&auto=format&fit=crop&q=60",
  },
  {
    nombre: "Arreglo de Barba",
    precio: "$180 MXN",
    descripcion:
      "Perfilado y recorte de barba con tijeras y máquina, incluye toallas calientes y aceite para barba.",
    imagen:
      "https://images.unsplash.com/photo-1621607512214-68297480165e?w=800&auto=format&fit=crop&q=60",
  },
  {
    nombre: "Diseño de Barba",
    precio: "$220 MXN",
    descripcion:
      "Diseño personalizado de barba con técnicas avanzadas y productos premium.",
    imagen:
      "https://images.unsplash.com/photo-1622286342621-4bd786c2447c?w=800&auto=format&fit=crop&q=60",
  },
  {
    nombre: "Tratamiento Capilar",
    precio: "$300 MXN",
    descripcion:
      "Tratamiento profundo para el cabello con productos naturales y masaje relajante.",
    imagen:
      "https://images.unsplash.com/photo-1599351431202-1e0f0137899a?w=800&auto=format&fit=crop&q=60",
  },
];

const barberos = [
  {
    id: 1,
    nombre: "Carlos Mendoza",
    especialidad: "Experto en cortes modernos",
    experiencia: "8 años",
    imagen:
      "https://images.unsplash.com/photo-1507003211169-0a1dd7228f2d?w=800&auto=format&fit=crop&q=60",
    descripcion:
      "Especialista en tendencias actuales y técnicas de vanguardia.",
  },
  {
    id: 2,
    nombre: "Luis Ramírez",
    especialidad: "Barbas y diseños personalizados",
    experiencia: "6 años",
    imagen:
      "https://images.unsplash.com/photo-1500648767791-00dcc994a43e?w=800&auto=format&fit=crop&q=60",
    descripcion: "Maestro en el arte del diseño y perfilado de barbas.",
  },
  {
    id: 3,
    nombre: "Daniel Torres",
    especialidad: "Clásico con técnica tradicional",
    experiencia: "10 años",
    imagen:
      "https://images.unsplash.com/photo-1506794778202-cad84cf45f1d?w=800&auto=format&fit=crop&q=60",
    descripcion: "Experto en técnicas tradicionales y cortes clásicos.",
  },
];
---

<!doctype html>
<html lang="es">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>Gentleman's Barber</title>

    <!-- Estilos internos -->
    <style is:global>
      :root {
        --primary-color: #1a1a1a;
        --secondary-color: #333333;
        --accent-color: #c8a97e;
        --text-color: #f5f5f5;
        --light-gray: #888888;
      }

      * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
        font-family: "Playfair Display", serif;
      }

      body {
        background-color: var(--primary-color);
        color: var(--text-color);
        line-height: 1.6;
      }

      header {
        background-color: rgba(0, 0, 0, 0.8);
        padding: 1rem 0;
        position: fixed;
        width: 100%;
        z-index: 1000;
        transition: background-color 0.5s ease;
      }

      nav {
        display: flex;
        justify-content: space-between;
        align-items: center;
        width: 100%;
        margin: 0;
        padding: 0 2.5rem 0 1rem;
      }

      .logo {
        font-size: 1.8rem;
        font-weight: bold;
        color: var(--accent-color);
        text-decoration: none;
        margin-left: 0;
      }

      .nav-links {
        display: flex;
        list-style: none;
        margin-left: auto;
      }

      .nav-links li {
        margin-left: 2rem;
      }

      .nav-links a {
        color: var(--text-color);
        text-decoration: none;
        font-size: 1rem;
        transition: color 0.3s;
      }

      .nav-links a:hover {
        color: var(--accent-color);
      }

      .hamburger {
        display: none;
        flex-direction: column;
        cursor: pointer;
        transition: all 0.3s ease;
      }

      .hamburger span {
        background: var(--accent-color);
        height: 3px;
        width: 25px;
        margin-bottom: 5px;
        border-radius: 2px;
        transition: all 0.3s ease;
      }

      .hamburger.active span:nth-child(1) {
        transform: rotate(45deg) translate(5px, 5px);
      }

      .hamburger.active span:nth-child(2) {
        opacity: 0;
      }

      .hamburger.active span:nth-child(3) {
        transform: rotate(-45deg) translate(7px, -6px);
      }

      /* Hero Section */
      .hero {
        height: 100vh;
        background:
          linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.7)),
          url("https://picsum.photos/1200/800 ") center/cover no-repeat;
        display: flex;
        align-items: center;
        justify-content: center;
        text-align: center;
        padding: 0 2rem;
      }

      .hero-content h1 {
        font-size: 3.5rem;
        margin-bottom: 1rem;
        letter-spacing: 2px;
      }

      .hero-content p {
        font-size: 1.2rem;
        margin-bottom: 2rem;
        max-width: 700px;
        margin: 0 auto 2rem;
      }

      /* Buttons */
      .btn {
        display: inline-block;
        background-color: var(--accent-color);
        color: var(--primary-color);
        padding: 0.8rem 2rem;
        border: none;
        border-radius: 4px;
        font-size: 1rem;
        cursor: pointer;
        transition:
          transform 0.3s,
          background 0.4s;
        font-weight: bold;
        position: relative;
        overflow: hidden;
        -webkit-tap-highlight-color: transparent;
        touch-action: manipulation;
      }

      .btn:hover {
        transform: scale(1.05);
        background-color: #d1b894;
      }

      .btn:active {
        transform: scale(0.98);
      }

      section {
        padding: 5rem 2rem;
        max-width: 1200px;
        margin: 0 auto;
      }

      .section-title {
        text-align: center;
        margin-bottom: 3rem;
        position: relative;
      }

      .section-title h2 {
        font-size: 2.5rem;
        display: inline-block;
        padding-bottom: 0.5rem;
        letter-spacing: 1px;
      }

      .section-title h2::after {
        content: "";
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        bottom: 0;
        width: 100px;
        height: 3px;
        background-color: var(--accent-color);
      }

      /* About */
      .about-content {
        display: flex;
        align-items: center;
        gap: 4rem;
      }

      .about-img img {
        width: 100%;
        border-radius: 8px;
      }

      .about-text h3 {
        font-size: 1.8rem;
        margin-bottom: 1rem;
        color: var(--accent-color);
      }

      /* Services */
      .services-grid,
      .barber-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
        gap: 2rem;
        padding: 1rem;
      }

      .service-card,
      .barber-card {
        background-color: var(--secondary-color);
        border-radius: 12px;
        overflow: hidden;
        transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        position: relative;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      }

      .service-card:hover,
      .barber-card:hover {
        transform: translateY(-15px) scale(1.02);
        box-shadow: 0 20px 30px rgba(200, 169, 126, 0.2);
      }

      .service-card:active,
      .barber-card:active {
        transform: translateY(-5px) scale(1.01);
      }

      .service-img,
      .barber-img {
        position: relative;
        overflow: hidden;
        height: 250px;
      }

      .service-img img,
      .barber-img img {
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform 0.6s cubic-bezier(0.4, 0, 0.2, 1);
      }

      .service-card:hover .service-img img,
      .barber-card:hover .barber-img img {
        transform: scale(1.1);
      }

      .service-info,
      .barber-info {
        padding: 1.5rem;
        background: linear-gradient(
          to top,
          var(--secondary-color),
          rgba(51, 51, 51, 0.9)
        );
      }

      .service-info h3,
      .barber-info h3 {
        color: var(--accent-color);
        font-size: 1.5rem;
        margin-bottom: 0.5rem;
      }

      .price {
        font-size: 1.3rem;
        font-weight: bold;
        color: var(--accent-color);
        margin: 0.5rem 0;
      }

      .barber-info p {
        margin: 0.5rem 0;
        color: var(--text-color);
        opacity: 0.9;
      }

      .barber-info strong {
        color: var(--accent-color);
      }

      /* Forms */
      .appointment-form {
        background-color: var(--secondary-color);
        padding: 2.5rem;
        border-radius: 12px;
        max-width: 600px;
        margin: 0 auto;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
      }

      .form-group {
        margin-bottom: 1.8rem;
      }

      .form-control {
        width: 100%;
        padding: 1rem;
        border: 2px solid var(--light-gray);
        border-radius: 8px;
        background-color: var(--primary-color);
        color: var(--text-color);
        font-size: 1rem;
        transition: all 0.3s ease;
      }

      .form-control:focus {
        border-color: var(--accent-color);
        outline: none;
        box-shadow: 0 0 0 3px rgba(200, 169, 126, 0.2);
      }

      /* Improve form accessibility on mobile */
      .form-control {
        -webkit-appearance: none;
        -moz-appearance: none;
        appearance: none;
      }

      /* Better touch targets for mobile */
      .calendar-day,
      .time-slot {
        min-height: 44px;
        min-width: 44px;
      }

      /* Admin Table */
      .admin-panel {
        overflow-x: auto;
      }

      .appointments-table {
        width: 100%;
        border-collapse: collapse;
      }

      .appointments-table th,
      .appointments-table td {
        padding: 1rem;
        border-bottom: 1px solid var(--light-gray);
      }

      .appointments-table th {
        background-color: var(--accent-color);
        color: var(--primary-color);
      }

      footer {
        background-color: var(--secondary-color);
        padding: 2rem 0;
        text-align: center;
      }

      .footer-content {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 2rem;
      }

      .social-links {
        display: flex;
        justify-content: center;
        list-style: none;
        margin: 1.5rem 0;
      }

      .social-links li {
        margin: 0 1rem;
      }

      .social-links a {
        color: var(--text-color);
        font-size: 1.5rem;
        transition: transform 0.3s;
      }

      .social-links a:hover {
        transform: scale(1.2);
        color: var(--accent-color);
      }

      /* Modal */
      .modal {
        display: none;
        position: fixed;
        z-index: 2000;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        background-color: rgba(0, 0, 0, 0.8);
      }

      .modal-content {
        background-color: var(--secondary-color);
        margin: 15% auto;
        padding: 2rem;
        border-radius: 8px;
        width: 80%;
        max-width: 400px;
      }

      /* Animations */
      .animate-on-scroll {
        opacity: 0;
        transform: translateY(50px);
        transition: all 0.8s ease;
      }

      .animate-on-scroll.visible {
        opacity: 1;
        transform: translateY(0);
      }

      .fade-in {
        animation: fadeIn 1s ease forwards;
      }

      @keyframes fadeIn {
        from {
          opacity: 0;
          transform: translateY(30px);
        }
        to {
          opacity: 1;
          transform: translateY(0);
        }
      }

      @media (max-width: 768px) {
        /* Navigation */
        nav {
          padding: 0 1rem;
        }

        .logo {
          font-size: 1.4rem;
        }

        .nav-links {
          flex-direction: column;
          position: fixed;
          top: 70px;
          right: -100%;
          width: 100%;
          height: calc(100vh - 70px);
          background: rgba(26, 26, 26, 0.95);
          backdrop-filter: blur(10px);
          display: flex;
          padding: 2rem 0;
          transition: right 0.3s ease;
          z-index: 999;
        }

        .nav-links.active {
          right: 0;
        }

        .nav-links li {
          margin: 1rem 0;
          text-align: center;
        }

        .nav-links a {
          font-size: 1.2rem;
          padding: 1rem 2rem;
          display: block;
        }

        .hamburger {
          display: flex;
          z-index: 1000;
        }

        /* Hero Section */
        .hero {
          height: 100vh;
          padding: 0 1rem;
        }

        .hero-content h1 {
          font-size: 2rem;
          line-height: 1.2;
        }

        .hero-content p {
          font-size: 1rem;
          margin-bottom: 1.5rem;
        }

        .btn {
          padding: 0.8rem 1.5rem;
          font-size: 0.9rem;
        }

        /* Sections */
        section {
          padding: 3rem 1rem;
        }

        .section-title h2 {
          font-size: 2rem;
        }

        /* About Section */
        .about-content {
          flex-direction: column;
          gap: 2rem;
        }

        .about-text h3 {
          font-size: 1.5rem;
        }

        /* Services Grid */
        .services-grid,
        .barber-grid {
          grid-template-columns: 1fr;
          gap: 1.5rem;
          padding: 0.5rem;
        }

        .service-card,
        .barber-card {
          margin: 0 auto;
          max-width: 350px;
        }

        .service-img,
        .barber-img {
          height: 200px;
        }

        .service-info,
        .barber-info {
          padding: 1rem;
        }

        .service-info h3,
        .barber-info h3 {
          font-size: 1.3rem;
        }

        /* Appointment Form */
        .appointment-form {
          padding: 1.5rem;
          margin: 0 0.5rem;
        }

        .form-group {
          margin-bottom: 1.5rem;
        }

        .form-control {
          padding: 0.8rem;
          font-size: 0.9rem;
        }

        /* Calendar */
        .calendar-container {
          width: 100% !important;
          max-width: 100% !important;
          min-width: 0 !important;
          overflow-x: hidden;
          box-sizing: border-box;
        }

        .calendar-grid {
          width: 100%;
          min-width: 0;
          box-sizing: border-box;
          grid-template-columns: repeat(7, 1fr);
          overflow-x: hidden;
        }

        .calendar-day {
          aspect-ratio: unset !important;
          min-width: 0 !important;
          padding: 0.2rem 0 !important;
          font-size: 0.75rem !important;
          box-sizing: border-box;
          word-break: break-word;
          max-width: 100%;
        }

        .time-slots {
          grid-template-columns: repeat(auto-fill, minmax(70px, 1fr));
          gap: 0.3rem;
        }

        .time-slot {
          padding: 0.3rem;
          font-size: 0.7rem;
        }

        /* Footer */
        .footer-content {
          padding: 0 1rem;
        }

        .social-links {
          flex-wrap: wrap;
          gap: 1rem;
        }

        .social-links li {
          margin: 0;
        }
      }

      @media (max-width: 480px) {
        /* Extra small devices - Enhanced Design */
        .hero-content {
          padding: 1.5rem;
        }

        .hero-content h1 {
          font-size: 1.8rem;
          line-height: 1.1;
        }

        .hero-content p {
          font-size: 0.95rem;
          line-height: 1.5;
        }

        .section-title h2 {
          font-size: 1.8rem;
        }

        .service-card,
        .barber-card {
          max-width: 100%;
        }

        .service-img,
        .barber-img {
          height: 200px;
        }

        .service-info,
        .barber-info {
          padding: 1.5rem;
        }

        .appointment-form {
          padding: 2rem 1.5rem;
          margin: 0;
        }

        .calendar-container {
          padding: 1rem;
        }

        .calendar-day {
          font-size: 0.8rem;
          padding: 0.4rem;
        }

        .time-slot {
          font-size: 0.8rem;
          padding: 0.6rem 0.4rem;
        }

        .btn {
          padding: 0.9rem 2rem;
          font-size: 0.9rem;
        }

        .nav-links {
          padding: 5rem 1.5rem 2rem;
        }

        .nav-links a {
          font-size: 1.2rem;
          padding: 1rem 1.5rem;
        }
      }

      @media (max-width: 360px) {
        /* Very small devices - Polished Design */
        .hero-content {
          padding: 1rem;
        }

        .hero-content h1 {
          font-size: 1.6rem;
          line-height: 1.1;
        }

        .hero-content p {
          font-size: 0.9rem;
          line-height: 1.4;
        }

        .section-title h2 {
          font-size: 1.6rem;
        }

        .service-info h3,
        .barber-info h3 {
          font-size: 1.2rem;
        }

        .service-info,
        .barber-info {
          padding: 1.2rem;
        }

        .appointment-form {
          padding: 1.5rem 1rem;
        }

        .calendar-container {
          padding: 0.8rem;
        }

        .calendar-day {
          font-size: 0.7rem;
          padding: 0.3rem;
        }

        .time-slot {
          font-size: 0.7rem;
          padding: 0.5rem 0.3rem;
        }

        .nav-links {
          padding: 4rem 1rem 2rem;
        }

        .nav-links a {
          font-size: 1.1rem;
          padding: 0.8rem 1.2rem;
        }

        .btn {
          padding: 0.8rem 1.8rem;
          font-size: 0.85rem;
        }
      }

      /* Mobile-specific improvements */
      @media (hover: none) and (pointer: coarse) {
        /* Touch devices */
        .service-card:hover,
        .barber-card:hover {
          transform: none;
          box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
        }

        .btn:hover {
          transform: none;
        }

        .calendar-day:hover:not(.disabled) {
          background: transparent;
          color: inherit;
        }

        .time-slot:hover:not(.disabled) {
          border-color: var(--light-gray);
          transform: none;
        }
      }

      /* Prevent zoom on input focus on iOS */
      @media screen and (-webkit-min-device-pixel-ratio: 0) {
        input, select, textarea {
          font-size: 16px;
        }
      }

      /* Enhanced Calendar Styles */
      .calendar-container {
        background: var(--secondary-color);
        border-radius: 12px;
        padding: 1rem;
        margin-bottom: 1.5rem;
        max-width: 400px;
        margin-left: auto;
        margin-right: auto;
      }

      .calendar-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 0.8rem;
      }

      .calendar-header h3 {
        font-size: 1.1rem;
        margin: 0;
      }

      .calendar-nav {
        display: flex;
        gap: 0.5rem;
      }

      .calendar-nav button {
        background: var(--accent-color);
        color: var(--primary-color);
        border: none;
        padding: 0.3rem 0.6rem;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 0.9rem;
      }

      .calendar-grid {
        display: grid;
        grid-template-columns: repeat(7, 1fr);
        gap: 0.3rem;
      }

      .calendar-day {
        aspect-ratio: 1;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 4px;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 0.8rem;
        padding: 0.2rem;
      }

      .calendar-day:hover:not(.disabled) {
        background: var(--accent-color);
        color: var(--primary-color);
      }

      .calendar-day.selected {
        background: var(--accent-color);
        color: var(--primary-color);
      }

      .calendar-day.disabled {
        opacity: 0.3;
        cursor: not-allowed;
      }

      .calendar-day.today {
        border: 2px solid var(--accent-color);
      }

      /* Time Slots Styles */
      .time-slots {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(80px, 1fr));
        gap: 0.5rem;
        margin-top: 1rem;
      }

      .time-slot {
        background: var(--primary-color);
        border: 1px solid var(--light-gray);
        border-radius: 4px;
        padding: 0.4rem;
        text-align: center;
        cursor: pointer;
        transition: all 0.3s ease;
        font-size: 0.8rem;
      }

      .time-slot:hover:not(.disabled) {
        border-color: var(--accent-color);
        transform: translateY(-2px);
      }

      .time-slot.selected {
        background: var(--accent-color);
        color: var(--primary-color);
        border-color: var(--accent-color);
      }

      .time-slot.disabled {
        opacity: 0.3;
        cursor: not-allowed;
      }
    </style>
  </head>
  <body>
    <!-- Header -->
    <header>
      <nav>
        <a href="#" class="logo">Gentleman's Barber</a>
        <ul class="nav-links" id="nav-links">
          <li style="--i: 1;"><a href="#inicio">Inicio</a></li>
          <li style="--i: 2;"><a href="#nosotros">Nosotros</a></li>
          <li style="--i: 3;"><a href="#servicios">Servicios</a></li>
          <li style="--i: 4;"><a href="#barberos">Barberos</a></li>
          <li style="--i: 5;"><a href="#agendar">Agendar Cita</a></li>
          <li style="--i: 6;"><a href="/login" id="admin-login">Administrador</a></li>
        </ul>
        <div class="hamburger" id="hamburger">
          <span></span>
          <span></span>
          <span></span>
        </div>
      </nav>
    </header>

    <!-- Hero -->
    <section class="hero" id="inicio">
      <div class="hero-content fade-in">
        <h1>GENTLEMAN'S BARBER</h1>
        <p>
          Expertos en el arte del cuidado masculino. Ofrecemos servicios de alta
          calidad para el caballero moderno que valora la tradición y la
          excelencia.
        </p>
        <a href="#agendar" class="btn animate-on-scroll">Agendar Cita</a>
      </div>
    </section>

    <!-- About -->
    <section id="nosotros">
      <div class="section-title fade-in">
        <h2>Nosotros</h2>
      </div>
      <div class="about-content animate-on-scroll">
        <div class="about-img">
          <img
            src="https://picsum.photos/600/400  "
            alt="Interior de la barbería"
          />
        </div>
        <div class="about-text">
          <h3>Tradición y Excelencia</h3>
          <p>
            En Gentleman's Barber, combinamos las técnicas tradicionales de
            barbería con las tendencias modernas para ofrecer a nuestros
            clientes la mejor experiencia posible.
          </p>
          <p>
            Nuestro equipo de barberos profesionales está dedicado a
            proporcionar servicios personalizados en un ambiente exclusivo y
            relajante. Cada visita es una experiencia única diseñada para que te
            sientas renovado y con confianza.
          </p>
          <p>
            Utilizamos productos de la más alta calidad y herramientas de
            precisión para garantizar resultados excepcionales en cada servicio.
          </p>
        </div>
      </div>
    </section>

    <!-- Services -->
    <section id="servicios">
      <div class="section-title fade-in">
        <h2>Nuestros Servicios</h2>
      </div>
      <div class="services-grid">
        {
          paquetes.map((p) => (
            <div class="service-card animate-on-scroll">
              <div class="service-img">
                <img src={p.imagen} alt={p.nombre} />
              </div>
              <div class="service-info">
                <h3>{p.nombre}</h3>
                <p class="price">{p.precio}</p>
                <p>{p.descripcion}</p>
              </div>
            </div>
          ))
        }
      </div>
    </section>

    <!-- Barberos -->
    <section id="barberos">
      <div class="section-title fade-in">
        <h2>Nuestros Barberos</h2>
      </div>
      <div class="barber-grid">
        {
          barberos.map((b) => (
            <div class="barber-card animate-on-scroll">
              <div class="barber-img">
                <img src={b.imagen} alt={b.nombre} />
              </div>
              <div class="barber-info">
                <h3>{b.nombre}</h3>
                <p>
                  <strong>Especialidad:</strong> {b.especialidad}
                </p>
                <p>
                  <strong>Experiencia:</strong> {b.experiencia}
                </p>
                <p>{b.descripcion}</p>
              </div>
            </div>
          ))
        }
      </div>
    </section>

    <!-- Appointment Form -->
    <section id="agendar">
      <div class="section-title fade-in">
        <h2>Agendar Cita</h2>
      </div>
      <div class="appointment-form animate-on-scroll">
        <form action="/api/citas" method="POST">
          <div class="form-group">
            <label for="fullname">Nombre Completo</label>
            <input
              type="text"
              name="nombre"
              id="fullname"
              class="form-control"
              required
            />
          </div>
          <div class="form-group">
            <label for="phone">Número de Teléfono</label>
            <input
              type="tel"
              name="telefono"
              id="phone"
              class="form-control"
              required
            />
          </div>
          <div class="form-group">
            <label for="service">Servicio</label>
            <select name="paquete" id="service" class="form-control" required>
              <option value="">Seleccionar servicio</option>
              {
                paquetes.map((p, i) => (
                  <option value={i + 1}>
                    {p.nombre} - {p.precio}
                  </option>
                ))
              }
            </select>
          </div>
          <div class="form-group">
            <label for="barbero">Barbero</label>
            <select name="barbero" id="barbero" class="form-control" required>
              <option value="">Seleccionar barbero</option>
              {
                barberos.map((b) => (
                  <option value={b.id}>
                    {b.nombre} - {b.especialidad}
                  </option>
                ))
              }
            </select>
          </div>

          <!-- Enhanced Calendar -->
          <div class="form-group">
            <label>Fecha y Hora</label>
            <div class="calendar-container">
              <div class="calendar-header">
                <div class="calendar-nav">
                  <button type="button" id="prevMonth">&lt;</button>
                  <h3 id="currentMonth">Septiembre 2024</h3>
                  <button type="button" id="nextMonth">&gt;</button>
                </div>
              </div>
              <div class="calendar-grid" id="calendarGrid">
                <!-- Calendar days will be inserted here by JavaScript -->
              </div>
              <div class="time-slots" id="timeSlots">
                <!-- Time slots will be inserted here by JavaScript -->
              </div>
            </div>
            <input type="hidden" name="fecha" id="selectedDate" required />
            <input type="hidden" name="hora" id="selectedTime" required />
          </div>

          <button type="submit" class="btn">Confirmar Cita</button>
        </form>
      </div>
    </section>

    <!-- Footer -->
    <footer>
      <div class="footer-content">
        <h3>Gentleman's Barber</h3>
        <p>Av. patrias 123, Col.margarita, Culiacan Rosales, Sinaloa</p>
        <p>Tel: (667) 123-4567</p>
        <ul class="social-links">
          <li><a href="#">Facebook</a></li>
          <li><a href="#">Instagram</a></li>
        </ul>
        <p>&copy; 2025 Gentleman's Barber. Todos los derechos reservados.</p>
      </div>
    </footer>

    <!-- Scripts -->
    <script>
      // Interfaces
      interface Appointment {
        id: number;
        fullname: string;
        phone: string;
        service: string;
        barbero: string;
        date: string;
        time: string;
      }

      // Declaración global para TypeScript
      declare global {
        interface Window {
          deleteAppointment: (id: number) => void;
        }
      }

      // ==========================
      // ANIMACIONES AL HACER SCROLL
      // ==========================
      const observer = new IntersectionObserver(
        (entries) => {
          entries.forEach((entry) => {
            if (entry.isIntersecting) {
              entry.target.classList.add("visible");
            }
          });
        },
        { threshold: 0.1 }
      );

      document
        .querySelectorAll(".animate-on-scroll")
        .forEach((el) => observer.observe(el));

      // ==========================
      // MENÚ HAMBURGUESA (Responsive)
      // ==========================
      const hamburger = document.getElementById("hamburger");
      const navLinks = document.getElementById("nav-links");

      if (hamburger && navLinks) {
        hamburger.addEventListener("click", () => {
          navLinks.classList.toggle("active");
          // Toggle hamburger animation
          hamburger.classList.toggle("active");
        });

        // Close menu when clicking on a link
        const navLinksItems = navLinks.querySelectorAll("a");
        navLinksItems.forEach(link => {
          link.addEventListener("click", () => {
            navLinks.classList.remove("active");
            hamburger.classList.remove("active");
          });
        });

        // Close menu when clicking outside
        document.addEventListener("click", (e) => {
          if (!hamburger.contains(e.target as Node) && !navLinks.contains(e.target as Node)) {
            navLinks.classList.remove("active");
            hamburger.classList.remove("active");
          }
        });
      }

      // ==========================
      // FUNCIONALIDAD DE CITAS
      // ==========================
      const appointmentForm = document.querySelector(
        'form[action="/api/citas"]'
      ) as HTMLFormElement;

      if (appointmentForm) {
        appointmentForm.addEventListener("submit", async function (e) {
          e.preventDefault();

          const fullnameInput = document.getElementById(
            "fullname"
          ) as HTMLInputElement;
          const phoneInput = document.getElementById(
            "phone"
          ) as HTMLInputElement;
          const serviceSelect = document.getElementById(
            "service"
          ) as HTMLSelectElement;
          const barberoSelect = document.getElementById(
            "barbero"
          ) as HTMLSelectElement;
          const selectedDateInput = document.getElementById(
            "selectedDate"
          ) as HTMLInputElement;
          const selectedTimeInput = document.getElementById(
            "selectedTime"
          ) as HTMLInputElement;

          if (
            !fullnameInput ||
            !phoneInput ||
            !serviceSelect ||
            !barberoSelect ||
            !selectedDateInput ||
            !selectedTimeInput
          ) {
            alert("Faltan datos en el formulario");
            return;
          }

          const cita = {
            nombre: fullnameInput.value,
            telefono: phoneInput.value,
            paquete: serviceSelect.value,
            barbero: barberoSelect.value,
            fecha: selectedDateInput.value,
            hora: selectedTimeInput.value,
            timestamp: new Date().toISOString(),
          };

          try {
            const res = await fetch("/api/citas", {
              method: "POST",
              headers: { "Content-Type": "application/json" },
              body: JSON.stringify(cita),
            });

            if (res.ok) {
              alert("¡Cita agendada con éxito!");
              appointmentForm.reset();
            } else {
              alert("Error al guardar la cita. Intenta de nuevo.");
            }
          } catch (err) {
            alert("Error de conexión. Intenta de nuevo.");
          }
        });
      }

      function formatDate(dateString: string): string {
        const options: Intl.DateTimeFormatOptions = {
          weekday: "long",
          year: "numeric",
          month: "long",
          day: "numeric",
        };
        return new Date(dateString).toLocaleDateString("es-ES", options);
      }

      // ==========================
      // LOGIN DEL ADMINISTRADOR
      // ==========================
      const modal = document.getElementById("login-modal");
      const adminLoginBtn = document.getElementById("admin-login");
      const closeBtn = document.querySelector(".modal .close");
      const adminPanel = document.getElementById("admin-panel");

      if (adminLoginBtn && modal) {
        adminLoginBtn.addEventListener("click", () => {
          modal.style.display = "block";
        });
      }

      if (closeBtn && modal) {
        closeBtn.addEventListener("click", () => {
          modal.style.display = "none";
        });
      }

      window.addEventListener("click", (event) => {
        if (modal && event.target === modal) {
          modal.style.display = "none";
        }
      });

      const loginForm = document.getElementById("login-form");

      if (loginForm) {
        loginForm.addEventListener("submit", function (e) {
          e.preventDefault();

          const usernameInput = document.getElementById(
            "username"
          ) as HTMLInputElement;
          const passwordInput = document.getElementById(
            "password"
          ) as HTMLInputElement;

          if (!usernameInput || !passwordInput) {
            console.error("No se encontraron los campos de login");
            return;
          }

          if (
            usernameInput.value === "admin" &&
            passwordInput.value === "admin123"
          ) {
            if (modal) modal.style.display = "none";
            if (adminPanel) {
              adminPanel.style.display = "block";
              document
                .getElementById("admin-section")
                ?.scrollIntoView({ behavior: "smooth" });
            }
          } else {
            alert("Usuario o contraseña incorrectos");
          }
        });
      }

      // ==========================
      // MOSTRAR CITAS EN EL PANEL ADMIN
      // ==========================
      // (El panel de admin y funciones relacionadas a appointments/localStorage han sido eliminadas porque ahora todo se guarda en Firestore)
      // Si quieres mostrar las citas, hazlo desde el backend o con un fetch a Firestore.

      // Calendar functionality
      const calendarGrid = document.getElementById(
        "calendarGrid"
      ) as HTMLDivElement;
      const currentMonthElement = document.getElementById(
        "currentMonth"
      ) as HTMLHeadingElement;
      const prevMonthButton = document.getElementById(
        "prevMonth"
      ) as HTMLButtonElement;
      const nextMonthButton = document.getElementById(
        "nextMonth"
      ) as HTMLButtonElement;
      const timeSlotsContainer = document.getElementById(
        "timeSlots"
      ) as HTMLDivElement;
      const selectedDateInput = document.getElementById(
        "selectedDate"
      ) as HTMLInputElement;
      const selectedTimeInput = document.getElementById(
        "selectedTime"
      ) as HTMLInputElement;

      let currentDate = new Date();
      let selectedDate: Date | null = null;
      let selectedTime: string | null = null;

      const weekDays = ["Dom", "Lun", "Mar", "Mié", "Jue", "Vie", "Sáb"];
      const timeSlots = [
        "10:00",
        "11:00",
        "12:00",
        "13:00",
        "14:00",
        "15:00",
        "16:00",
        "17:00",
        "18:00",
        "19:00",
      ];

      function renderCalendar() {
        if (!calendarGrid || !currentMonthElement) return;

        const year = currentDate.getFullYear();
        const month = currentDate.getMonth();

        const firstDay = new Date(year, month, 1);
        const lastDay = new Date(year, month + 1, 0);

        currentMonthElement.textContent = `${firstDay.toLocaleString("es-ES", { month: "long" })} ${year}`;

        calendarGrid.innerHTML = "";

        // Add week day headers
        weekDays.forEach((day) => {
          const dayElement = document.createElement("div");
          dayElement.className = "calendar-day";
          dayElement.textContent = day;
          calendarGrid.appendChild(dayElement);
        });

        // Add empty cells for days before the first day of the month
        for (let i = 0; i < firstDay.getDay(); i++) {
          const emptyDay = document.createElement("div");
          emptyDay.className = "calendar-day disabled";
          calendarGrid.appendChild(emptyDay);
        }

        // Add days of the month
        for (let day = 1; day <= lastDay.getDate(); day++) {
          const dayElement = document.createElement("div");
          dayElement.className = "calendar-day";
          dayElement.textContent = day.toString();

          const currentDay = new Date(year, month, day);

          // Disable past dates
          const today = new Date();
          today.setHours(0, 0, 0, 0);
          if (currentDay < today) {
            dayElement.classList.add("disabled");
          }

          // Highlight today
          if (currentDay.toDateString() === new Date().toDateString()) {
            dayElement.classList.add("today");
          }

          // Highlight selected date
          if (
            selectedDate &&
            currentDay.toDateString() === selectedDate.toDateString()
          ) {
            dayElement.classList.add("selected");
          }

          dayElement.addEventListener("click", () => {
            if (!dayElement.classList.contains("disabled")) {
              document
                .querySelectorAll(".calendar-day")
                .forEach((d) => d.classList.remove("selected"));
              dayElement.classList.add("selected");
              selectedDate = currentDay;
              if (selectedDateInput) {
                selectedDateInput.value = currentDay
                  .toISOString()
                  .split("T")[0];
              }
              renderTimeSlots();
            }
          });

          calendarGrid.appendChild(dayElement);
        }
      }

      function renderTimeSlots() {
        if (!timeSlotsContainer) return;

        timeSlotsContainer.innerHTML = "";

        timeSlots.forEach((time) => {
          const timeSlot = document.createElement("div");
          timeSlot.className = "time-slot";
          timeSlot.textContent = time;

          // Disable past times for today
          if (
            selectedDate &&
            selectedDate.toDateString() === new Date().toDateString()
          ) {
            const [hours, minutes] = time.split(":");
            const slotTime = new Date();
            slotTime.setHours(parseInt(hours), parseInt(minutes), 0);

            if (slotTime < new Date()) {
              timeSlot.classList.add("disabled");
            }
          }

          // Highlight selected time
          if (selectedTime === time) {
            timeSlot.classList.add("selected");
          }

          timeSlot.addEventListener("click", () => {
            if (!timeSlot.classList.contains("disabled")) {
              document
                .querySelectorAll(".time-slot")
                .forEach((t) => t.classList.remove("selected"));
              timeSlot.classList.add("selected");
              selectedTime = time;
              if (selectedTimeInput) {
                selectedTimeInput.value = time;
              }
            }
          });

          timeSlotsContainer.appendChild(timeSlot);
        });
      }

      if (prevMonthButton) {
        prevMonthButton.addEventListener("click", () => {
          currentDate.setMonth(currentDate.getMonth() - 1);
          renderCalendar();
        });
      }

      if (nextMonthButton) {
        nextMonthButton.addEventListener("click", () => {
          currentDate.setMonth(currentDate.getMonth() + 1);
          renderCalendar();
        });
      }

      // Initial render
      renderCalendar();
      renderTimeSlots();
    </script>
  </body>
</html>
